// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StatusMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from StatusMessage.proto</summary>
public static partial class StatusMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for StatusMessage.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StatusMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNTdGF0dXNNZXNzYWdlLnByb3RvGhJWYWx1ZU1lc3NhZ2UucHJvdG8imwEK",
          "DVN0YXR1c01lc3NhZ2USHwoIRW5jb2RlcnMYASADKAsyDS5WYWx1ZU1lc3Nh",
          "Z2USJQoOQWNjZWxlcm9tZXRlcnMYAiADKAsyDS5WYWx1ZU1lc3NhZ2USIQoK",
          "R3lyb3Njb3BlcxgDIAMoCzINLlZhbHVlTWVzc2FnZRIfCghBZHZhbmNlZBgE",
          "IAMoCzINLlZhbHVlTWVzc2FnZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ValueMessageReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::StatusMessage), global::StatusMessage.Parser, new[]{ "Encoders", "Accelerometers", "Gyroscopes", "Advanced" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class StatusMessage : pb::IMessage<StatusMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<StatusMessage> _parser = new pb::MessageParser<StatusMessage>(() => new StatusMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<StatusMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StatusMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StatusMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StatusMessage(StatusMessage other) : this() {
    encoders_ = other.encoders_.Clone();
    accelerometers_ = other.accelerometers_.Clone();
    gyroscopes_ = other.gyroscopes_.Clone();
    advanced_ = other.advanced_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public StatusMessage Clone() {
    return new StatusMessage(this);
  }

  /// <summary>Field number for the "Encoders" field.</summary>
  public const int EncodersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ValueMessage> _repeated_encoders_codec
      = pb::FieldCodec.ForMessage(10, global::ValueMessage.Parser);
  private readonly pbc::RepeatedField<global::ValueMessage> encoders_ = new pbc::RepeatedField<global::ValueMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ValueMessage> Encoders {
    get { return encoders_; }
  }

  /// <summary>Field number for the "Accelerometers" field.</summary>
  public const int AccelerometersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::ValueMessage> _repeated_accelerometers_codec
      = pb::FieldCodec.ForMessage(18, global::ValueMessage.Parser);
  private readonly pbc::RepeatedField<global::ValueMessage> accelerometers_ = new pbc::RepeatedField<global::ValueMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ValueMessage> Accelerometers {
    get { return accelerometers_; }
  }

  /// <summary>Field number for the "Gyroscopes" field.</summary>
  public const int GyroscopesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ValueMessage> _repeated_gyroscopes_codec
      = pb::FieldCodec.ForMessage(26, global::ValueMessage.Parser);
  private readonly pbc::RepeatedField<global::ValueMessage> gyroscopes_ = new pbc::RepeatedField<global::ValueMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ValueMessage> Gyroscopes {
    get { return gyroscopes_; }
  }

  /// <summary>Field number for the "Advanced" field.</summary>
  public const int AdvancedFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ValueMessage> _repeated_advanced_codec
      = pb::FieldCodec.ForMessage(34, global::ValueMessage.Parser);
  private readonly pbc::RepeatedField<global::ValueMessage> advanced_ = new pbc::RepeatedField<global::ValueMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ValueMessage> Advanced {
    get { return advanced_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as StatusMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(StatusMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!encoders_.Equals(other.encoders_)) return false;
    if(!accelerometers_.Equals(other.accelerometers_)) return false;
    if(!gyroscopes_.Equals(other.gyroscopes_)) return false;
    if(!advanced_.Equals(other.advanced_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= encoders_.GetHashCode();
    hash ^= accelerometers_.GetHashCode();
    hash ^= gyroscopes_.GetHashCode();
    hash ^= advanced_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    encoders_.WriteTo(output, _repeated_encoders_codec);
    accelerometers_.WriteTo(output, _repeated_accelerometers_codec);
    gyroscopes_.WriteTo(output, _repeated_gyroscopes_codec);
    advanced_.WriteTo(output, _repeated_advanced_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    encoders_.WriteTo(ref output, _repeated_encoders_codec);
    accelerometers_.WriteTo(ref output, _repeated_accelerometers_codec);
    gyroscopes_.WriteTo(ref output, _repeated_gyroscopes_codec);
    advanced_.WriteTo(ref output, _repeated_advanced_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += encoders_.CalculateSize(_repeated_encoders_codec);
    size += accelerometers_.CalculateSize(_repeated_accelerometers_codec);
    size += gyroscopes_.CalculateSize(_repeated_gyroscopes_codec);
    size += advanced_.CalculateSize(_repeated_advanced_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(StatusMessage other) {
    if (other == null) {
      return;
    }
    encoders_.Add(other.encoders_);
    accelerometers_.Add(other.accelerometers_);
    gyroscopes_.Add(other.gyroscopes_);
    advanced_.Add(other.advanced_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          encoders_.AddEntriesFrom(input, _repeated_encoders_codec);
          break;
        }
        case 18: {
          accelerometers_.AddEntriesFrom(input, _repeated_accelerometers_codec);
          break;
        }
        case 26: {
          gyroscopes_.AddEntriesFrom(input, _repeated_gyroscopes_codec);
          break;
        }
        case 34: {
          advanced_.AddEntriesFrom(input, _repeated_advanced_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          encoders_.AddEntriesFrom(ref input, _repeated_encoders_codec);
          break;
        }
        case 18: {
          accelerometers_.AddEntriesFrom(ref input, _repeated_accelerometers_codec);
          break;
        }
        case 26: {
          gyroscopes_.AddEntriesFrom(ref input, _repeated_gyroscopes_codec);
          break;
        }
        case 34: {
          advanced_.AddEntriesFrom(ref input, _repeated_advanced_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
